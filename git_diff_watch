#!/bin/bash

# git_diff_watch - Continuously display the last git commit diff with color
# Usage: git_diff_watch [interval_seconds] [additional_git_diff_args]

# Default refresh interval in seconds
INTERVAL=${1:-2}
shift 2>/dev/null

# Check if we're in a git repository
if ! git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
    echo "Error: Not in a git repository"
    exit 1
fi

# Use a simpler approach with direct output to terminal
setup_display() {
    # Function to clear screen without flickering
    clear_screen() {
        tput clear
    }
    
    # Clean up function
    cleanup() {
        tput cnorm  # Show cursor
        echo -e "\nExiting git diff watch"
        exit 0
    }
    
    # Set trap for cleanup
    trap cleanup INT TERM EXIT
    
    # Hide cursor for cleaner display
    tput civis
}

# Function to display the diff with a header
show_diff() {
    clear_screen
    
    # Get the last commit hash and message
    LAST_COMMIT=$(git log -1 --pretty=format:"%h - %s (%cr) by %an")

    # Print header with timestamp
    echo -e "\033[1;36m=== Last Commit Diff (Updated: $(date '+%Y-%m-%d %H:%M:%S')) ===\033[0m"
    echo -e "\033[1;33m$LAST_COMMIT\033[0m"
    echo -e "\033[1;36m=======================================================\033[0m"
    echo ""
    
    # Show the diff with color
    git --no-pager diff HEAD~1 HEAD --color=always "$@"
    
    echo ""
    echo -e "\033[1;36m=== Press Ctrl+C to exit ===\033[0m"
}

# Main execution
echo "Starting git diff watch, refreshing every $INTERVAL seconds..."
setup_display

# Main loop
while true; do
    show_diff "$@"
    sleep $INTERVAL
done
